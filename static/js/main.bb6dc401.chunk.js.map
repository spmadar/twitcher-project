{"version":3,"sources":["redux/helpers/index.js","redux/auth.js","redux/users.js","redux/messages.js","redux/likes.js","redux/index.js","react/components/LoginForm.js","react/components/Menu.js","react/components/RegistrationForm.js","react/components/ToggleLike.js","react/components/MessageCard.js","react/components/CreatePost.js","react/components/ListOfMessages.js","react/components/ProfileCard.js","react/components/ProfileMessages.js","react/HOCs/userIsAuthenticated.js","react/HOCs/userIsNotAuthenticated.js","react/Home.js","react/Profile.js","react/NotFound.js","react/MessageFeed.js","react/App.js","index.js"],"names":["domain","jsonHeaders","Accept","handleJsonResponse","res","ok","json","then","result","createActions","actionName","START","createAction","SUCCESS","FAIL","asyncInitialState","loading","error","asyncCases","state","action","payload","url","LOGIN","LOGOUT","reducers","login","createReducer","key","initialState","storedState","JSON","parse","localStorage","getItem","Object","keys","every","property","undefined","getInitStateFromStorage","toString","logout","CREATEUSER","GETUSER","ADDPICTURE","createuser","getuser","addpicture","CREATEPOST","GETMESSAGES","getmessages","messageData","dispatch","fetch","method","headers","catch","err","Promise","reject","createpost","DELETELIKES","ADDLIKES","addLikes","deleteLikes","history","createBrowserHistory","basename","process","store","configureStore","reducer","router","connectRouter","auth","combineReducers","authReducers","user","userReducers","messages","messageReducers","likes","likesReducers","preloadedState","devTools","subscribe","setItem","stringify","getState","LoginForm","username","password","handleLogin","e","preventDefault","props","handleChange","setState","target","name","value","this","Fragment","id","onSubmit","htmlFor","className","type","autoFocus","required","onChange","disabled","color","style","message","React","Component","connect","loginData","body","Menu","handleLogout","event","isAuthenticated","to","onClick","token","Authorization","RegistrationForm","displayName","console","log","handleSignUp","statusCode","Segment","inverted","Form","Group","widths","Input","fluid","label","placeholder","mapDispatchToProps","Create_User","push","ToggleLike","handleToggleLike","toggleLike","messageId","outline","theme","size","icon","faThumbsUp","likeId","filter","like","length","addLike","loggedInUsername","MessageCard","class","Comment","Content","Button","as","labelPosition","Avatar","src","onError","display","wrapped","Author","Metadata","createdAt","Text","text","CreatePost","messagetext","handlePost","Field","_createpost","ListOfMessages","map","Date","toDateString","ProfileCard","handleAddPicture","setTimeout","window","location","reload","handleDisplayPicture","pictureLocation","bind","Card","Image","ui","Header","Meta","extra","Modal","trigger","closeIcon","Actions","formTag","FormData","ProfileMessages","filteredmessage","userIsAuthenticated","connectedRouterRedirect","redirectPath","authenticatedSelector","wrapperDisplayName","userIsNotAuthenticated","ownProps","allowRedirectBack","Profile","profile","userData","NotFound","pathname","App","tweets","profileImage","tweet","exact","path","component","Home","MessageFeed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb6dc401.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const domain = \"https://kwitter-api.herokuapp.com\";\n//export const domain = \"http://localhost:3000\";\n\nexport const jsonHeaders = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\"\n};\n\nexport const handleJsonResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return res.json().then(result => {\n    throw result;\n  });\n};\n\nexport const createActions = actionName => ({\n  START: createAction(actionName + \"/start\"),\n  SUCCESS: createAction(actionName + \"/success\"),\n  FAIL: createAction(actionName + \"/fail\")\n});\n\nexport const asyncInitialState = {\n  result: null,\n  loading: false,\n  error: null\n};\n\nexport const asyncCases = ({ START, SUCCESS, FAIL }) => ({\n  [START]: (state, action) => {\n    state.loading = true;\n    state.error = null;\n  },\n  [SUCCESS]: (state, action) => {\n    state.loading = false;\n    state.result = action.payload;\n  },\n  [FAIL]: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  }\n});\n\nexport const getInitStateFromStorage = (key, initialState) => {\n  const storedState = JSON.parse(localStorage.getItem(key));\n\n  if (storedState) {\n    const unchangedInitialStateProps =\n      Object.keys(storedState).every(\n        property => initialState[property] !== undefined\n      ) &&\n      Object.keys(initialState).every(\n        property => storedState[property] !== undefined\n      );\n    if (unchangedInitialStateProps) {\n      return storedState;\n    }\n  }\n  return initialState;\n};\n","import {\n  domain,\n  jsonHeaders,\n  handleJsonResponse,\n  getInitStateFromStorage,\n  asyncInitialState,\n  asyncCases,\n  createActions,\n  createReducer\n} from \"./helpers\";\n\nconst url = domain + \"/auth\";\n\nconst LOGIN = createActions(\"login\");\nexport const login = loginData => dispatch => {\n  dispatch(LOGIN.START());\n\n  return fetch(url + \"/login\", {\n    method: \"POST\",\n    headers: jsonHeaders,\n    body: JSON.stringify(loginData)\n  })\n    .then(handleJsonResponse)\n    .then(result => dispatch(LOGIN.SUCCESS(result)))\n    .catch(err => Promise.reject(dispatch(LOGIN.FAIL(err))));\n};\n\nconst LOGOUT = createActions(\"logout\");\nexport const logout = () => (dispatch, getState) => {\n  dispatch(LOGOUT.START());\n\n  const token = getState().auth.login.result.token;\n\n  return fetch(url + \"/logout\", {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + token, ...jsonHeaders }\n  })\n    .then(handleJsonResponse)\n    .then(result => dispatch(LOGOUT.SUCCESS(result)))\n    .catch(err => Promise.reject(dispatch(LOGOUT.FAIL(err))));\n};\n\nexport const reducers = {\n  login: createReducer(getInitStateFromStorage(\"login\", asyncInitialState), {\n    ...asyncCases(LOGIN),\n    [LOGOUT.SUCCESS.toString()]: (state, action) => asyncInitialState\n  }),\n  logout: createReducer(asyncInitialState, {\n    ...asyncCases(LOGOUT)\n  })\n};\n","import {\n    domain,\n    jsonHeaders,\n    handleJsonResponse,\n    asyncInitialState,\n    asyncCases,\n    createActions,\n    createReducer\n  } from \"./helpers\";\n  import {push} from \"connected-react-router\";\n\n  \n  const url = domain + \"/users\";\n  \n  const CREATEUSER = createActions(\"createuser\");\n  \n  export const Create_User = (username, displayName, password) => (dispatch, getState) => {\n    dispatch(CREATEUSER.START());\n    console.log(username, displayName, password);\n    return fetch(url, {\n      method: \"POST\",\n      headers: jsonHeaders,\n      body: JSON.stringify({\"username\" : username, \"displayName\": displayName, \"password\" : password})\n    })\n\n      .then(handleJsonResponse)\n      .then(result => dispatch(CREATEUSER.SUCCESS(result)))\n      .catch(err => Promise.reject(dispatch(CREATEUSER.FAIL(err))));\n  };\n  export const createuser = (username, displayName, password) => (dispatch, getState) =>{\n    return dispatch(Create_User(username, displayName, password)).then(() => {\n        dispatch(push(\"/\"))\n    })\n  };\n  \n\n  const GETUSER = createActions(\"getuser\");\n  export const getuser = userData => dispatch => {\n    dispatch(GETUSER.START());\n\n    return fetch(url + \"/\" + userData, {\n      method: \"GET\",\n      // headers: jsonHeaders\n    })\n      .then(handleJsonResponse)\n      .then(result => dispatch(GETUSER.SUCCESS(result)))\n      .catch(err => Promise.reject(dispatch(GETUSER.FAIL(err))));\n  };\n\n  const ADDPICTURE = createActions(\"addpicture\");\n  export const addpicture = (formTag) => (dispatch, getState) => {\n    dispatch(ADDPICTURE.START());\n\n    const username = getState().auth.login.result.username;\n    const token = getState().auth.login.result.token;\n\n    return fetch(url + \"/\" + username + \"/picture\", {\n      method: \"PUT\",\n      headers: {Authorization: \"Bearer \" + token, Accept: \"application/json\"},\n      body: new FormData(formTag)\n    })\n      .then(handleJsonResponse)\n      .then(result => dispatch(ADDPICTURE.SUCCESS(result)))\n      .catch(err => Promise.reject(dispatch(ADDPICTURE.FAIL(err))));\n  };\n\n\n\n  export const reducers = {\n    createuser: createReducer(asyncInitialState, {\n      ...asyncCases(CREATEUSER),\n    }),\n    getuser: createReducer(asyncInitialState, {\n      ...asyncCases(GETUSER),\n    }),\n    addpicture: createReducer(asyncInitialState, {\n      ...asyncCases(ADDPICTURE),\n    }),\n\n  };","import {\n    domain,\n    jsonHeaders,\n    handleJsonResponse,\n    asyncInitialState,\n    asyncCases,\n    createActions,\n    createReducer\n  } from \"./helpers\";\n// import authWrapper from \"redux-auth-wrapper/authWrapper\";\n  \n  const url = domain + \"/messages\";\n  \n  const CREATEPOST = createActions(\"createpost\");\n  const _createpost = messagetext => (dispatch, getState) => {\n    dispatch(CREATEPOST.START());\n  \n    const token = getState().auth.login.result.token;\n   // console.log(token)\n    console.log(messagetext)\n\n    return fetch(url, {\n      method: \"POST\",\n      headers: { Authorization: \"Bearer \" + token, ...jsonHeaders },\n      body: JSON.stringify({text: messagetext})\n    })\n      .then(handleJsonResponse)\n      .then(result => dispatch(CREATEPOST.SUCCESS(result)))\n      .catch(err => Promise.reject(dispatch(CREATEPOST.FAIL(err))));\n  };\n  export const createpost = messagetext => (dispatch) => {\n    dispatch(_createpost(messagetext))\n    .then(() => dispatch(getmessages()))\n  }\n\n\n  const GETMESSAGES = createActions(\"getmessages\");\n  export const getmessages = messageData => dispatch => {\n      dispatch(GETMESSAGES.START());\n\n      return fetch(url, {\n          method: \"GET\",\n          headers: jsonHeaders,\n          // body: JSON.stringify(messageData)\n      })\n        \n      .then(handleJsonResponse)\n      .then(result => dispatch(GETMESSAGES.SUCCESS(result)))\n      .catch(err => Promise.reject(dispatch(GETMESSAGES.FAIL(err))));\n  }\n\n  \n  export const reducers = {\n    createpost: createReducer(asyncInitialState, {\n      ...asyncCases(CREATEPOST),\n    //   [CREATEPOST.SUCCESS.toString()]: (state, action) => asyncInitialState\n    }),\n    getmessages: createReducer(asyncInitialState, {\n        ...asyncCases(GETMESSAGES),\n  })\n}\n","import {\n    domain,\n    jsonHeaders,\n    handleJsonResponse,\n    asyncInitialState,\n    asyncCases,\n    createReducer,\n    createActions,\n} from \"./helpers\"\nimport { getmessages } from \"./messages\"\n\nconst url = domain + \"/likes\"\n\nconst DELETELIKES = createActions(\"deleteLike\");\nconst deleteLike = likeId => (dispatch, getState) => {\n    dispatch(DELETELIKES.START());\n\n    const token = getState().auth.login.result.token;\n\n    return fetch(url + \"/\" + likeId, {\n        method: \"DELETE\",\n        headers: { Authorization: \"Bearer \" + token, ...jsonHeaders },\n    })\n        .then(handleJsonResponse)\n        .then(result => dispatch(DELETELIKES.SUCCESS(result)))\n        .catch(err => Promise.reject(dispatch(DELETELIKES.FAIL(err))))\n};\n\nconst ADDLIKES = createActions(\"addLike\");\nconst addLike = messageId => (dispatch, getState) => {\n    console.log(\"added a like!\");\n    dispatch(ADDLIKES.START());\n\n    const token = getState().auth.login.result.token\n    console.log(messageId)\n    return fetch(url, {\n        method: \"POST\",\n        headers: { Authorization: \"Bearer \" + token, ...jsonHeaders },\n        body: JSON.stringify({ messageId: messageId })\n    })\n        .then(handleJsonResponse)\n        .then(result => dispatch(ADDLIKES.SUCCESS(result)))\n        .catch(err => Promise.reject(dispatch(ADDLIKES.FAIL(err))))\n};\n\n\nexport const toggleLike = (likes, messageId) => (dispatch, getState) => {\n    const username = getState().auth.login.result.username\n\n    likes = likes.filter(like => like.username === username)\n    if (likes.length > 0) {\n        dispatch(deleteLike(likes[0].id)).then(() => dispatch(getmessages()))\n    } else {\n        dispatch(addLike(messageId)).then(() => dispatch(getmessages()))\n    }\n\n}\nexport const reducers = {\n    addLikes: createReducer(asyncInitialState, {\n        ...asyncCases(ADDLIKES),\n    }),\n    deleteLikes: createReducer(asyncInitialState, {\n        ...asyncCases(DELETELIKES),\n    })\n};","import { createBrowserHistory } from \"history\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { reducers as authReducers } from \"./auth\";\nimport { reducers as userReducers } from \"./users\";\nimport { reducers as messageReducers} from \"./messages\";\nimport { reducers as likesReducers } from \"./likes\"\nexport * from \"./auth\";\nexport * from \"./users\";\nexport * from \"./likes\";\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nexport const store = configureStore({\n  // add reducers to store\n  reducer: {\n    router: connectRouter(history),\n    auth: combineReducers(authReducers),\n    user: combineReducers(userReducers),\n    messages: combineReducers(messageReducers),\n    likes: combineReducers(likesReducers)\n  },\n  preloadedState: {},\n  devTools: process.env.NODE_ENV !== \"production\"\n});\n\n\n\n// registers a function to be called on state changes\nstore.subscribe(() => {\n  localStorage.setItem(\"login\", JSON.stringify(store.getState().auth.login));\n  localStorage.setItem(\"createpost\", JSON.stringify(store.getState().messages.createpost));\n  localStorage.setItem(\"getmessages\", JSON.stringify(store.getState().messages.getmessages));\n  localStorage.setItem(\"getuser\", JSON.stringify(store.getState().user.getuser));\n  localStorage.setItem(\"createuser\", JSON.stringify(store.getState().user.createuser));\n  localStorage.setItem(\"addpicture\", JSON.stringify(store.getState().user.addpicture));\n  \n});\n","import React from \"react\";\nimport Spinner from \"react-spinkit\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux\";\nimport \"./LoginForm.css\";\n\n\nclass LoginForm extends React.Component {\n  state = { username: \"\", password: \"\" };\n\n  handleLogin = e => {\n    e.preventDefault();\n    this.props.login(this.state);\n  };\n\n  \n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { loading, error } = this.props;\n    return (\n      <React.Fragment>\n        <form id=\"login-form\" onSubmit={this.handleLogin}>\n          <label htmlFor=\"username\" id=\"user\">Username</label>\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"username\"\n            autoFocus\n            required\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\" id=\"pass\">Password</label>\n          <input\n            className=\"input\"\n            type=\"password\"\n            name=\"password\"\n            required\n            onChange={this.handleChange}\n          />\n        \n          <button type=\"submit\" id=\"logbutton\" disabled={loading}>\n            Login\n          </button>\n        </form>\n        {loading && <Spinner name=\"circle\" color=\"blue\" />}\n        {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    result: state.auth.login.result,\n    loading: state.auth.login.loading,\n    error: state.auth.login.error\n  }),\n  { login }\n)(LoginForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Menu.css\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../redux\";\n\nclass Menu extends React.Component {\n  handleLogout = event => {\n    event.preventDefault();\n    this.props.logout();\n  };\n\n  render() {\n    return (\n   \n      <div className=\"menu\" id=\"appbar\">\n        <h1 className=\"logo\">Twitcher</h1>\n        {this.props.isAuthenticated && (\n          <div id=\"menu-links\">\n            <Link to=\"/messagefeed\" id=\"msg\">Message Feed</Link>\n            <Link to=\"/profiles/:username\" id=\"profile\">Profile</Link>\n            <Link to=\"/\" id=\"logout\" onClick={this.handleLogout}>\n              Logout\n            </Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    result: state.auth.logout.result,\n    loading: state.auth.logout.loading,\n    error: state.auth.logout.error\n  }),\n  { logout }\n)(Menu);\n","import React from \"react\";\n// import Spinner from \"react-spinkit\";\nimport { connect } from \"react-redux\";\nimport {createuser}  from \"../../redux/users\";\nimport {Form, Segment} from \"semantic-ui-react\";\nimport \"./RegistrationForm.css\"\n\nclass RegistrationForm extends React.Component {\n  state = { username: \"\", displayName: \"\", password: \"\" };\n  handleChange = e => {\n\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(this.state)\n  };\n\n  handleSignUp = event => {\n    this.props.createuser(\n      this.state.username,\n      this.state.displayName,\n      this.state.password\n    );\n  };\n\n  render() {\n    if (this.props.result) {\n      console.log(this.props.result, \"first\")\n      if (this.props.result.statusCode === 200) {\n        console.log(this.props.result)\n        return null\n      }\n    }\n  \n    return (\n      \n      <Segment inverted>\n        <h1>Create Your Account</h1>\n      <Form inverted>\n        <Form.Group widths='equal'>\n          <Form.Input id=\"reguser\" name=\"username\" fluid label='Username' placeholder='Username' onChange={this.handleChange} />\n          <Form.Input id=\"regdisp\" name=\"displayName\" fluid label='Display Name' placeholder='Display Name' onChange={this.handleChange}/>\n          <Form.Input id=\"regpass\"name=\"password\" fluid label='Password' placeholder='Password' onChange={this.handleChange}/>\n        </Form.Group>\n       \n        <button type='submit' className=\"glow-on-hover\" onClick={this.handleSignUp}>Sign Up!</button>\n      </Form>\n    </Segment> \n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.user.createuser.loading,\n    error: state.user.createuser.error,\n    result: state.user.createuser.result\n  };\n};\nconst mapDispatchToProps = {\n  createuser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { toggleLike} from \"../../redux\";\nimport  { connect } from \"react-redux\"\n\n\nclass ToggleLike extends React.Component {\n    handleToggleLike = event => {\n        this.props.toggleLike(this.props.likes, this.props.messageId);\n    };\n\n    render() {\n        if (this.props.result === null) {\n            return null\n          }\n        // const isLiked = this.props.likes.find(\n        //     like => like.username === this.props.loggedInUsername\n        // );\n        \n        return (\n            <Button\n                outline\n                className=\"like\"\n                theme=\"primary\"\n                size=\"sm\"\n                onClick={this.handleToggleLike}\n            >\n                <FontAwesomeIcon icon={faThumbsUp} size=\"lg\"></FontAwesomeIcon>{\" \"}\n                {/* {isLiked ? \"Unlike\" : \"Like\"} */}\n            </Button>\n        );\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedInUsername: state.auth.login.result.username\n    };\n};\nconst mapDispatchToProps = {\n   toggleLike\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToggleLike);","import React from 'react';\nimport { Comment, Button } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./MessageCard.css\";\nimport ToggleLike from \"./ToggleLike\";\n\n\nclass MessageCard extends React.Component {\n    render() {\n        return (\n            <div class=\"msgcard\">\n                <Comment.Group id=\"container\">\n                    <Comment>\n                        <Comment.Content>\n                            <Button id=\"likebutton\" as='div' labelPosition='right' size='tiny'>\n                                {/* <p> Likes: {this.props.likes.length}</p> */}\n                                <ToggleLike messageId={this.props.id} likes={this.props.likes} />\n                            </Button>\n\n                            <Comment.Avatar id=\"avatar\" as='a' src={`https://kwitter-api.herokuapp.com/users/${this.props.username}/picture`}\n                            onError={ e => (e.target.style.display =\"none\")}\n                            size='medium'\n                            wrapped= \"true\"\n                            />\n                            <div id=\"content\">\n                                <Comment.Author > {this.props.username}</Comment.Author>\n                                <Comment.Metadata>\n                                    {this.props.createdAt}\n                                </Comment.Metadata>\n                                <Comment.Text>\n                                    {this.props.text}\n                                </Comment.Text>\n                            </div>\n                        </Comment.Content>\n                    </Comment>\n                </Comment.Group>\n            </div>\n        )\n    }\n};\n\n\nexport default MessageCard;\n","import React from 'react';\nimport { Form, Button, Input} from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport {createpost} from \"../../redux/messages\";\nimport \"./CreatePost.css\"\n\nclass CreatePost extends React.Component {\n    state = {\n        messagetext: \"\"\n    };\n\n    \n    handleChange = e => {\n        e.preventDefault(); \n        this.props.createpost(this.state.messagetext);\n        this.setState({messagetext: \"\"})\n    }\n\n\n    handlePost = e => {\n        this.setState({ messagetext: e.target.value})\n    }\n\n\n    render() {\n        return (\n            \n            <div id=\"createpost\">\n            <Form>\n                <Form.Field>\n                    <label id=\"calltoaction\">Speak your mind...</label>\n                    <Input onChange={this.handlePost} />\n                </Form.Field>\n                <Button onClick={this.handleChange}>post</Button>\n            </Form>\n           </div> \n          \n        )\n    }\n} \n\n  \nexport default connect(\n    state => ({\n      result: state.messages.createpost.result,\n      loading: state.messages.createpost.loading,\n      error: state.messages.createpost.error\n    }),\n    { createpost }\n  )(CreatePost);\n\n// export default CreatePost;","import React from \"react\";\nimport { MessageCard} from \".\";\nimport { getmessages } from \"../../redux/messages\";\nimport { connect } from \"react-redux\";\nimport \"./ListOfMessages.css\"\n\n\n\nclass ListOfMessages extends React.Component {\n  componentDidMount(){\n    this.props.getmessages()\n  }\n  \n\n  render() {\n    \n    if (this.props.result === null) {\n      return null\n    }\n    return this.props.result.messages.map(message => {\n      return (\n    \n         <MessageCard\n          key={message.id}\n          text={message.text}\n          createdAt={new Date(message.createdAt).toDateString()}\n          username={message.username}\n          likes={message.likes}\n          id={message.id}\n          />\n          \n      )\n    })\n   }  \n  }\n\n\nconst mapStateToProps = state => {\n  return {\n    result: state.messages.getmessages.result,\n    loading: state.messages.getmessages.result,\n    error: state.messages.getmessages.result\n  }\n}\n\nconst mapDispatchToProps = {\n  getmessages\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfMessages);\n\n\n\n// export default userIsAuthenticated(MessageFeed);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Image, Modal, Form, Button } from \"semantic-ui-react\";\nimport {addpicture} from \"../../redux/users\";\nimport \"./ProfileCard.css\"\n\n\nclass ProfileCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleAddPicture = this.handleAddPicture.bind(this);\n        // this.handleDeleteUser = this.handleDeleteUser.bind(this);\n    }\n\n    handleAddPicture = event => {\n        event.preventDefault();\n        this.props.addpicture(event.target);\n        setTimeout(function(){\n            window.location.reload();\n          }, 1000);\n    \n    }\n\n    handleDisplayPicture = () => {\n        if (this.props.pictureLocation) {\n            return `https://kwitter-api.herokuapp.com/users/${this.props.username}/picture`\n        } else {\n            return null\n        }\n    }\n\n   \n    render() {\n        return (\n            <Card>\n                <Image src={this.handleDisplayPicture()}\n                    wrapped\n                    ui={false} />\n                <Card.Content>\n                    <Card.Header>{this.props.username}</Card.Header>\n                    <Card.Meta>\n                        <span className='date'>joined on {new Date(this.props.createdAt).toDateString()}</span>\n                    </Card.Meta>\n                </Card.Content>\n                <Card.Content extra>\n                    <Modal trigger={<Button>Upload a Photo</Button>} closeIcon>\n                        <Modal.Header >Select a file</Modal.Header>\n                        <Modal.Actions>\n                            <Form onSubmit={this.handleAddPicture}>\n                                <input type='file' name='picture' />\n                                <input type='submit' value='Submit' />\n                            </Form>\n                        </Modal.Actions>\n                    </Modal>\n                    {/* <Button onClick= {this.props.deleteuser()}> delete account</Button> */}\n                </Card.Content>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        username: state.auth.login.result.username,\n        createdAt: state.user.getuser.result.user.createdAt,\n        pictureLocation: state.user.getuser.result.user.pictureLocation,\n       \n    };\n};\n\nconst mapDispatchToProps = {\n    addpicture,\n   \n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileCard);\n","import React from \"react\";\nimport { MessageCard} from \".\";\nimport { getmessages } from \"../../redux/messages\";\nimport { connect } from \"react-redux\";\n\n\n\nclass ProfileMessages extends React.Component {\n  componentDidMount(){\n    this.props.getmessages()\n  }\n  \n\n  render() {\n    \n    if (this.props.result === null) {\n      return null\n    }\n    return this.props.result.messages.filter(message => (message.username === this.props.username)).map(filteredmessage => {\n      return (\n    \n         <MessageCard\n            key={filteredmessage.id}\n            text={filteredmessage.text}\n            createdAt={new Date(filteredmessage.createdAt).toDateString()}\n            username={filteredmessage.username}\n          //likes\n          />\n          \n      )\n    })\n   }  \n  }\n    \n     \n\nconst mapStateToProps = state => {\n  return {\n    username: state.auth.login.result.username,\n    result: state.messages.getmessages.result,\n    loading: state.messages.getmessages.result,\n    error: state.messages.getmessages.result\n  }\n}\n\nconst mapDispatchToProps = {\n  getmessages\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileMessages);\n","import { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\n\nconst userIsAuthenticated = connectedRouterRedirect({\n  // The url to redirect user to if they fail\n  redirectPath: \"/\",\n  // If selector is true, wrapper will not redirect\n  // For example let's check that state contains user data\n  authenticatedSelector: state =>\n    state.auth &&\n    state.auth.login &&\n    state.auth.login.result &&\n    state.auth.login.result.token !== undefined,\n  // A nice display name for this check\n  wrapperDisplayName: \"UserIsAuthenticated\"\n});\n\nexport default userIsAuthenticated;\n","import { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\n\nconst userIsNotAuthenticated = connectedRouterRedirect({\n  // This sends the user either to the query param route if we have one, or to the landing page if none is specified and the user is already logged in\n  redirectPath: (state, ownProps) =>\n    `/profiles/${state.auth &&\n      state.auth.login &&\n      state.auth.login.result &&\n      state.auth.login.result.username}`,\n  // This prevents us from adding the query parameter when we send the user away from the login page\n  allowRedirectBack: false,\n  // If selector is true, wrapper will not redirect\n  // So if there is no user data, then we show the page\n  authenticatedSelector: state =>\n    state.auth && state.auth.login && state.auth.login.result === null,\n  // A nice display name for this check\n  wrapperDisplayName: \"UserIsNotAuthenticated\"\n});\n\nexport default userIsNotAuthenticated;\n","import React from \"react\";\nimport { LoginForm, Menu } from \"./components\";\nimport { userIsNotAuthenticated } from \"./HOCs\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\n\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div class=\"homepage\">\n\n        <Menu />\n        <h2>\"Evil is Evil. Lesser, greater, middling… <br/>\n          Makes no difference. The degree is arbitrary. The definition is blurred. <br/>\n          If I’m to choose between one evil and another, I’d rather not choose at all.\"</h2>\n        <LoginForm />\n        \n         <Link to=\"/signup\" id=\"createacc\">Create An Account</Link>\n      </div>\n    );\n  }\n}\n\nexport default userIsNotAuthenticated(Home);\n","import React from \"react\";\nimport {Menu, CreatePost, ProfileCard, ProfileMessages} from \"./components\";\nimport {connect} from \"react-redux\";\nimport {getuser} from \"../redux/users\";\nimport { userIsAuthenticated } from \"./HOCs\";\n\n\nclass Profile extends React.Component {\n    componentDidMount(){\n        this.props.getuser(this.props.username)\n    }\n\n    render() {\n        if (this.props.result === null) {\n            return null\n        }\n\n        const profile = this.props.result.user\n        return (\n            <>\n                <Menu isAuthenticated={this.props.isAuthenticated} />\n                <ProfileCard \n                  pictureLocation={profile.pictureLocation}\n                  username={profile.displayName} \n                />\n                <CreatePost />\n                <ProfileMessages />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        username: state.auth.login.result.username,\n        result: state.user.getuser.result,\n        loading: state.user.getuser.loading,\n        error: state.user.getuser.error\n    }\n}\n\nconst mapDispatchToProps = {\n    getuser\n}\n\nexport default userIsAuthenticated(connect(mapStateToProps, mapDispatchToProps)(Profile));\n\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <>\n        <p>Page not found for {this.props.location.pathname}</p>\n        <Link to=\"/\">Go Home</Link>\n      </>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport {ListOfMessages, Menu, CreatePost} from \"./components\";\nimport { userIsAuthenticated } from \"./HOCs\";\nimport \"./MessageFeed.css\"\n\nclass MessageFeed extends React.Component {\n    render() {\n        return (\n            <div id=\"home\">\n            {<Menu isAuthenticated={this.props.isAuthenticated}/>}\n            <CreatePost />\n            <ListOfMessages />\n            </div>\n        )\n    }\n}\n\nexport default userIsAuthenticated(MessageFeed);","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Profile from \"./Profile\";\nimport NotFound from \"./NotFound\";\nimport MessageFeed from \"./MessageFeed\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport 'semantic-ui-css/semantic.min.css';\n// import styled from 'styled-components';\n\n\nclass App extends React.Component {\n    state = {\n      tweets: [\n        {\n          id: 1,\n          profileImage: '../img/renfri.png',\n          name: 'Renfri',\n          tweet: 'Sometimes I feel like the whole world is out to get me. God knows I’m only in Blaviken to kill that bastard Stregobor. Any man strong enough to defy medieval misogyny, meet me in the Tavern.'\n      },\n      {\n        id: 2,\n        profileImage: '../img/stregobor.png',\n        name: 'Stregobor',\n        tweet: 'The Curse of the Black Sun has plagued humanity for decades; the time is now nigh for this wretched period to finally come to a close. Anybody who is willing to eliminate King Fredefalk of Creyden’s bastard daughter, the last daughter of Lilit, I will shower with naked women.'\n      },\n      {\n        id: 3,\n        profileImage: '../img/yennefer.png',\n        name: 'Yennefer',\n        tweet: 'Sigh… Portal-hopping to this extent is terrible for my complexion. I really don’t appreciate @Lyria sending some kind of mage assassin to kill this entitled-ass Aedirn queen I’m supposed to be protecting……. Crap! He just got the kid too. Help!'\n      },\n      {\n        id: 4,\n        profileImage: '../img/striga.png',\n        name: 'Striga',\n        tweet: 'Guuuuuuuurgrlgkmsl….. AHKSAH!!! RAra. Withcheererrrssssssssssssssss……. Aha… pull up…'\n      }\n    ]\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path= \"/signup\" component={RegistrationForm}/>\n        <Route exact path=\"/profiles/:username\" component={Profile} />\n        <Route exact path=\"/messagefeed\" component={MessageFeed} />\n        <Route path=\"*\" component={NotFound} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { App } from \"./react\";\nimport { store, history } from \"./redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}